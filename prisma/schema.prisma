generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email     String     @unique
  username  String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  password  String
  secretkey String     @unique @default(uuid())
  id        Int        @id @default(autoincrement())
  varified  Boolean    @default(false)
  folders   Folder[]
  linkform  Linkform[]
}

model Folder {
  id        Int        @id @unique @default(autoincrement())
  name      String
  secretKey String     @unique @default(uuid())
  userID    Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
  isDeleted Boolean    @default(false)
  user      User       @relation(fields: [userID], references: [id])
  links     Linkform[]

  @@index([userID])
}

model Linkform {
  secret_Id   String    @id @default(uuid())
  title       String
  description String
  createdAt   DateTime  @default(now())
  links       String
  tobefind    Boolean   @default(false)
  userID      Int
  folderID    Int?
  deletedAt   DateTime?
  isDeleted   Boolean   @default(false)
  body        String?
  imgurl      String?
  folder      Folder?   @relation(fields: [folderID], references: [id])
  user        User      @relation(fields: [userID], references: [id])

  @@index([userID])
}

model Verification {
  id      String   @id @default(uuid())
  email   String
  token   String
  expires DateTime

  @@unique([email, token])
}

model ForgotPassword {
  id      String   @id @default(uuid())
  email   String
  token   String
  expires DateTime

  @@unique([email, token])
}

model fallbackImage {
  id     Int    @id @default(autoincrement())
  imgurl String
}
